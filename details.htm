<!DOCTYPE html>


<html>

<head>
  <meta charset="utf-8">
  <title>Details</title>
  <link rel="stylesheet" href="https://rawgit.com/tpreusse/radar-chart-d3/master/src/radar-chart.css"/>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="//d3js.org/d3.v4.min.js" charset="utf-8"></script>
  <script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>

  <script src="RadarChart.js"></script>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <style>
    h1 {
      color: black;
    }

    .btn {
      background-color: light-green;
      padding: 0px 16px;
      font-size: 10px;
      border-radius: 100px;

    }

    .btn:hover {
      background-color: DarkCyan;
      color: white;
    }

    div.tooltip-donut {
      position: absolute;
      text-align: center;
      padding: .5rem;
      background: #FFFFFF;
      color: #313639;
      border: 1px solid #313639;
      border-radius: 8px;
      pointer-events: none;
      font-size: 1.3rem;
      font-weight: 500;
    }

    .radar-chart .area {
    fill-opacity: 0.7;
    }
    .radar-chart.focus .area {
      fill-opacity: 0.3;
    }
    .radar-chart.focus .area.focused {
      fill-opacity: 0.9;
    }

    .area .circle {
    fill: #FFD700;
    stroke: none;
  }

    .toggleContainer {
			position: relative;
			display: grid;
			float: right;
			grid-template-columns: repeat(2, 1fr);
			width: fit-content;
			border: 3px solid #343434;
			border-radius: 20px;
			background: #343434;
			font-weight: bold;
			color: #343434;
			cursor: pointer;
		}
		.toggleContainer::before {
			content: '';
			position: absolute;
			width: 50%;
			height: 100%;
			left: 0%;
			border-radius:20px;
			background: white;
			transition: all 0.3s;
		}
		.toggleCheckbox:checked + .toggleContainer::before {
			left: 50%;
		}
		.toggleContainer div {
			padding: 6px;
			text-align: center;
			z-index: 1;
		}
		.toggleCheckbox {
			display: none;
		}
		.toggleCheckbox:checked + .toggleContainer div:first-child{
			color: white;
			transition: color 0.3s;
		}
		.toggleCheckbox:checked + .toggleContainer div:last-child{
			color: #343434;
			transition: color 0.3s;
		}
		.toggleCheckbox + .toggleContainer div:first-child{
			color: #343434;
			transition: color 0.3s;
		}
		.toggleCheckbox + .toggleContainer div:last-child{
			color: white;
			transition: color 0.3s;
		}
    #chart {
	position: absolute;
	top: 50px;
	left: 100px;
}
  
  .toolTip {
  pointer-events: none;
	position: absolute;
    display: none;
  min-width: 50px;
  height: auto;
  background: none repeat scroll 0 0 #ffffff;
  padding: 9px 14px 6px 14px;
  border-radius: 2px;
  text-align: center;
  line-height: 1.3;
  color: #5B6770;
  box-shadow: 0px 3px 9px rgba(0, 0, 0, .15);
}
.toolTip:after {
  content: "";
  width: 0;
  height: 0;
  border-left: 12px solid transparent;
  border-right: 12px solid transparent;
  border-top: 12px solid white;
  position: absolute;
  bottom: -10px;
  left: 50%;
  margin-left: -12px;
}  
.toolTip span {
	font-weight: 500;
  color: #081F2C;
}
  </style>
</head>

<body class="h-screen bg-gray-100">
  <div class="flex flex-row h-screen">
    <div class="bg-white h-screen w-48 pl-2 pt-5 shadow-md overflow-y-auto">
      <div class="flex flex-wrap">
        <p class="bg-white text-l font-extrabold tracking-tight text-slate-900">Países</p>
              <button class="btn ml-7" onclick="location.href='index.htm'">
          <h1>INÍCIO</h1>
        </button>
      </div>
      <div>
        <div class="mt-6">
          <p class="text-s text-gray-700 "></p>
          <ul id="myList"></ul>

          <script>
            let lista = [];

            d3.json("./counties.json", function (data) {
              for (let index = 0; index < data.EUCountries.length; index++) {
                var country = data.EUCountries[index].Country;
                lista.push(country);
              }

              lista.sort();
              let list = document.getElementById("myList");
              var first_letter = lista[0].charAt(0);

              var p = document.createElement("li");
              var letter = document.createTextNode(first_letter)
              p.classList.add("text-s", "text-gray-700", "mt-4", "font-bold", "tracking-wide", "uppercase", "text-s");
              p.appendChild(letter);
              list.appendChild(p);

              lista.forEach((item) => {

                if (item.charAt(0) != first_letter) {
                  first_letter = item.charAt(0);
                  var p = document.createElement("li");
                  var letter = document.createTextNode(first_letter)
                  p.classList.add("text-s", "text-gray-700", "mt-4", "font-bold", "tracking-wide", "uppercase", "text-s");
                  p.appendChild(letter);
                  list.appendChild(p);

                  let li_country = document.createElement("li");
                  li_country.classList.add("text-xs", "text-gray-400", "mr-2", "hover:bg-gray-200", "p-3", "hover:text-gray-700", "rounded-lg");
                  li_country.innerText = item;
                  li_country.setAttribute("onclick", "changeCountry(this)");
                  list.appendChild(li_country);
                } else {
                  let li = document.createElement("li");
                  li.classList.add("text-xs", "text-gray-400", "mr-2", "hover:bg-gray-200", "p-3", "hover:text-gray-700", "rounded-lg");
                  li.innerText = item;
                  li.setAttribute("onclick", "changeCountry(this)")
                  list.appendChild(li);
                }
              });
            });
            function changeCountry (li) {
              localStorage.setItem("country", li.innerText);
              location.href='details.htm'
            }

          </script>
        </div>
      </div>
    </div>


    <div class='mt-12 overflow-y-auto w-full mx-10'>
      <div onload="getCurrentURL()">
        <h1 class="text-3xl font-bold ml-3" id="title"></h1>
        <script>
          document.getElementById("title").innerHTML = localStorage.getItem("country");
        </script>
          <select name="yearSelect" id="yearSelect" onchange="changeYear()">
          <!--<option id="year" value="">--Escolha um Ano--</option>-->
          <script>

            let year_select = document.getElementById("yearSelect");
            
            
            
            d3.json("./data/consumo/total/total_consumo.json", function(data_years) {
              Object.entries(data_years).forEach(([key, value]) => {
                let option = document.createElement("option");
                option.setAttribute("value", key);
                option.innerHTML = key
                option.setAttribute("onclick", "changeYear(this)");
                year_select.appendChild(option)
                
              })
              year_select.value = localStorage.getItem("year");
            });
            
            function changeYear() {
              let select = document.getElementById("yearSelect");
              localStorage.setItem("year", select.value);
              location.href='details.htm';
            }



          </script>
        </select>
      </div>

      <div class='flex flex-row lg:flex-nowrap justify-center'>

        <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
          <div class="bg-white h-32 w-72 p-4 pt-5 rounded-2xl shadow-md">
            <p class="text-s text-gray-700 ">Consumo nas Famílias</p>
            <p class="text-xs text-gray-700 mt-1 ">(Per Capita)</p>
            <div class="flex flex-wrap">
              <span class='text-2xl font-semibold mt-2' id="span1"></span> <!-- place data here -->
              <script>
                var year = localStorage.getItem("year");
                d3.json("./data/consumo_familias/consumo_familias.json", function (data_consumo_familias) {
                  data_consumo_familias = data_consumo_familias[2005].filter(function(d) { return d.Country == localStorage.getItem("country") });
                  document.getElementById("span1").innerHTML = data_consumo_familias[0].Energy;
                });

              </script>
              <span class='text-s text-gray-500 mt-2 ml-1'>tep</span>
            </div>
          </div>
        </div>

        <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
          <div class="bg-white h-32  w-72 p-4 pt-5 rounded-2xl shadow-md">
            <p class="text-s text-gray-700 ">Contribuição Energias Renováveis Consumo </p>
            <div class="flex flex-wrap">
              <span class='text-2xl font-semibold mt-2' id="span2"></span> <!-- place data here -->
              <span class='text-s text-gray-500 mt-2 ml-1'>%</span>

              <script>
                var year = localStorage.getItem("year");
                d3.json("./data/contr_renovaveis_consumo/contr_renovaveis_consumo.json", function (data_contr_renovaveis_consumo) {
                  data_contr_renovaveis_consumo = data_contr_renovaveis_consumo[year].filter(function (d) { return d.Country == localStorage.getItem("country") });
                  document.getElementById("span2").innerHTML = data_contr_renovaveis_consumo[0].Energy;

                });

              </script>
            </div>
          </div>
        </div>


        <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
          <div class="bg-white h-32  w-72 p-4 pt-5 rounded-2xl shadow-md">
            <p class="text-s text-gray-700 ">Contribuição Energias Renováveis Produção</p>
            <div class="flex flex-wrap">
              <span class='text-2xl font-semibold mt-2' id="span3"></span> <!-- place data here -->

              <script>
                var year = localStorage.getItem("year");
                d3.json("./data/contr_renovaveis_producao/contr_renovaveis_producao.json", function (data_contr_renovaveis_producao) {
                  data_contr_renovaveis_producao = data_contr_renovaveis_producao[year].filter(function (d) { return d.Country == localStorage.getItem("country") });
                  document.getElementById("span3").innerHTML = data_contr_renovaveis_producao[0].Energy;
                });
              </script>
              <span class='text-s text-gray-500 mt-2 ml-1'>%</span>
            </div>
          </div>
        </div>

        <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
          <div class="bg-white h-32  w-72 p-4 pt-5 rounded-2xl shadow-md">
            <p class="text-s text-gray-700 ">Preço - Doméstico</p>
            <div class="flex flex-wrap pt-6">
              <span class='text-2xl font-semibold mt-2' id="span4"></span> <!-- place data here -->

              <script>
                var year = localStorage.getItem("year");
                d3.json("./data/preco_eletricidade/domestico/domestico_preco_eletricidade.json", function (data_preco_domestico) {
                  data_preco_domestico = data_preco_domestico[year].filter(function (d) { return d.Country == localStorage.getItem("country") });
                  document.getElementById("span4").innerHTML = data_preco_domestico[0].Energy;
                });

              </script>


              <span class='text-s text-gray-500 mt-2 ml-1'>€</span>
            </div>
          </div>
        </div>

        <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
          <div class="bg-white h-32  w-72 p-4 pt-5 rounded-2xl shadow-md">
            <p class="text-s text-gray-700 ">Preço Eletricidade - Industrial</p>
            <div class="flex flex-wrap pt-6">
              <span class='text-2xl font-semibold mt-2' id="span5"></span> <!-- place data here -->

              <script>

                var year = localStorage.getItem("year");
                d3.json("./data/preco_eletricidade/industrial/industrial_preco_eletricidade.json", function (data_preco_industrial) {
                  data_preco_industrial = data_preco_industrial[year].filter(function (d) { return d.Country == localStorage.getItem("country") });
                  document.getElementById("span5").innerHTML = data_preco_industrial[0].Energy;
                });


              </script>


              <span class='text-s text-gray-500 mt-2 ml-1'>€</span>
            </div>
          </div>
        </div>

      </div>

      <div class="flex flex-row">
        <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
          <div class="bg-white  p-4 pt-5 rounded-2xl shadow-md text-center">
            <p class="text-l font-semibold text-gray-700 text-center">Energia Consumida por Setor</p>
            <p class="text-xs font-semibold text-gray-700 text-center">tep (tonelada equivalente de petróleo) - Milhares
            </p>
            <div id="bar_plot"></div>
          </div>
          <script>
            // set the dimensions and margins of the graph
            var margin = { top: 30, right: 30, bottom: 70, left: 60 },
              width = 730 - margin.left - margin.right,
              height = 400 - margin.top - margin.bottom;

            // append the svg object to the body of the page
            var svg = d3.select("#bar_plot")
              .append("svg")
              .attr("width", width + margin.left + margin.right)
              .attr("height", height + margin.top + margin.bottom)
              .append("g")
              .attr("transform",
                "translate(" + margin.left + "," + margin.top + ")");

            var year = localStorage.getItem("year");

            // Parse the Data
            d3.json("./data/consumo_setor/agricultura/agricultura_consumo_setor.json", function (data_agricultura) {
              d3.json("./data/consumo_setor/industria/industria_consumo_setor.json", function (data_industria) {
                d3.json("./data/consumo_setor/servicos/servicos_consumo_setor.json", function (data_servicos) {
                  d3.json("./data/consumo_setor/transportes/transportes_consumo_setor.json", function (data_transporte) {
                    d3.json("./data/consumo_setor/casa/casa_consumo_setor.json", function (data_casa) {
                      d3.json("./data/consumo_setor/pesca/pesca_consumo_setor.json", function (data_pesca) {
                        data_agricultura = data_agricultura[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                        data_industria = data_industria[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                        data_servicos = data_servicos[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                        data_transporte = data_transporte[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                        data_casa = data_casa[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                        data_pesca = data_pesca[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });


                        var data = [
                          { name: "Agricultura", value: data_agricultura[0].Energy },
                          { name: "Industria", value: data_industria[0].Energy },
                          { name: "Serviços", value: data_servicos[0].Energy },
                          { name: "Transporte", value: data_transporte[0].Energy },
                          { name: "Doméstico", value: data_casa[0].Energy },
                          { name: "Pesca", value: data_pesca[0].Energy },
                        ];

                        // X axis
                        var x = d3.scaleBand()
                          .range([0, 700])
                          .domain(data.map(function (d) { return d.name; }))
                          .padding(0.2);

                        svg.append("g")
                          .attr("transform", "translate(0," + height + ")")
                          .call(d3.axisBottom(x))
                          .selectAll("text")
                          .attr("transform", "translate(-10,0)rotate(-45)")
                          .style("text-anchor", "end");

                        // Add Y axis
                        var y = d3.scaleLinear()
                          .domain([0, d3.max(data, function (d) { return d.value + 1000; })])
                          .range([height, 0]);
                        svg.append("g")
                          .call(d3.axisLeft(y));

                        // value of bar
                        var div = d3.select("body").append("div")
                          .attr("class", "tooltip-donut")
                          .style("opacity", 0);

                        // Bars
                        svg.selectAll("mybar")
                          .data(data)
                          .enter()
                          .append("rect")
                          .attr("x", function (d) { return x(d.name); })
                          .attr("y", function (d) { return y(d.value); })
                          .attr("width", x.bandwidth())
                          .attr("height", function (d) { return height - y(d.value); })
                          .attr("fill", "#69b3a2")
                          .on('mouseover', function (d, i) {
                            d3.select(this).transition()
                              .duration('100')
                              .attr('opacity', '.70');          //Makes the new div appear on hover:
                            div.transition()
                              .duration(100)
                              .style("opacity", 1);
                            let num = Math.round(d.value);
                            div.html(num)
                              .style("left", (d3.event.pageX) + "px")
                              .style("top", (d3.event.pageY) + "px");
                          })
                          .on('mouseout', function (d, i) {
                            d3.select(this).transition()
                              .duration('100')
                              .attr('opacity', '1');          //Makes the new div disappear:
                            div.transition()
                              .duration('100')
                              .style("opacity", 0);
                          })
                      })
                    })
                  })
                })
              })
            });            
          </script>
        </div>
        <div class="w-full">
          <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
            <div class="bg-white w-full p-4 pt-5 rounded-2xl shadow-md">
              <p class="text-l font-semibold text-gray-700 text-center">Produção de Energia</p>
              <p class="text-xs font-semibold text-gray-700 text-center">tep (tonelada equivalente de petróleo) -
                Milhares</p>
              <div id="bar_plot2"></div>
            </div>
            <script>
              // set the dimensions and margins of the graph
              var margin = { top: 30, right: 30, bottom: 70, left: 60 },
                width = 730 - margin.left - margin.right,
                height = 400 - margin.top - margin.bottom;

              // append the svg object to the body of the page
              var svg_2 = d3.select("#bar_plot2")
                .append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform",
                  "translate(" + margin.left + "," + margin.top + ")");

              var year = localStorage.getItem("year");

              // Parse the Data
              d3.json("./data/prod/gas/gas_prod.json", function (data_gas) {
                d3.json("./data/prod/nuclear/nuclear_prod.json", function (data_nuclear) {
                  d3.json("./data/prod/petroleo/petroleo_prod.json", function (data_petroleo) {
                    d3.json("./data/prod/renovaveis/renovaveis_prod.json", function (data_renovaveis) {
                      data_gas = data_gas[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_nuclear = data_nuclear[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_petroleo = data_petroleo[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_renovaveis = data_renovaveis[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });


                      var data = [
                        { name: "Gás", value: data_gas[0].Energy },
                        { name: "Nuclear", value: data_nuclear[0].Energy },
                        { name: "Petróleo", value: data_petroleo[0].Energy },
                        { name: "Renováveis", value: data_renovaveis[0].Energy },
                      ];

                      // X axis
                      var x = d3.scaleBand()
                        .range([0, 700])
                        .domain(data.map(function (d) { return d.name; }))
                        .padding(0.2);

                      svg_2.append("g")
                        .attr("transform", "translate(0," + height + ")")
                        .call(d3.axisBottom(x))
                        .selectAll("text")
                        .attr("transform", "translate(-10,0)rotate(-45)")
                        .style("text-anchor", "end");

                      // Add Y axis
                      var y = d3.scaleLinear()
                        .domain([0, d3.max(data, function (d) { return d.value + 1000; })])
                        .range([height, 0]);
                      svg_2.append("g")
                        .call(d3.axisLeft(y));

                      // value of bar
                      var div = d3.select("body").append("div")
                        .attr("class", "tooltip-donut")
                        .style("opacity", 0);

                      // Bars
                      svg_2.selectAll("mybar")
                        .data(data)
                        .enter()
                        .append("rect")
                        .attr("x", function (d) { return x(d.name); })
                        .attr("y", function (d) { return y(d.value); })
                        .attr("width", x.bandwidth())
                        .attr("height", function (d) { return height - y(d.value); })
                        .attr("fill", "#9395d3")
                        .on('mouseover', function (d, i) {
                          d3.select(this).transition()
                            .duration('100')
                            .attr('opacity', '.70');          //Makes the new div appear on hover:
                          div.transition()
                            .duration(100)
                            .style("opacity", 1);
                          let num = Math.round(d.value);
                          div.html(num)
                            .style("left", (d3.event.pageX) + "px")
                            .style("top", (d3.event.pageY) + "px");
                        })
                        .on('mouseout', function (d, i) {
                          d3.select(this).transition()
                            .duration('100')
                            .attr('opacity', '1');          //Makes the new div disappear:
                          div.transition()
                            .duration('100')
                            .style("opacity", 0);
                        })
                    })
                  })
                })
              });            
            </script>
          </div>
        </div>
      </div>

      <div class="flex flex-row">
        <div class='flex m-3 flex-wrap justify-center gap-1 items-center w-1/2'>
          <div class="bg-white w-full  p-4 pt-5 rounded-2xl shadow-md">
            <p class="text-l font-semibold text-gray-700 text-center">Importações de Energia </p>
            <p class="text-xs font-semibold text-gray-700 text-center" id="legend1"></p>
            <input type="checkbox" id="toggle" class="toggleCheckbox" onclick='changeChart1()'/>
              <label for="toggle" class='toggleContainer'>
                  <div>Circular</div>
                  <div>Radar</div>
              </label>
            <div id="pie_chart_1"></div>
            <div id="radar_chart_1" style="display: none"></div>

          </div>
          <script>
            document.getElementById("legend1").innerHTML = "tep (tonelada equivalente de petróleo) - Milhares";
            createChart1()
            // set the dimensions and margins of the graph
            var width = 600
            height = 300
            margin = 0

            // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.
            var radius = Math.min(width, height) / 2 - margin

            // append the svg object to the div called 'my_dataviz'
            var svg_pc_1 = d3.select("#pie_chart_1")
              .append("svg")
              .attr("width", width)
              .attr("height", height)
              .append("g")
              .attr("transform", "translate(" + width / 3 + "," + height / 2 + ")");

            var year = localStorage.getItem("year");

            d3.json("./data/importacoes/comb_solido/comb_solidos_importacoes.json", function (data_comb_solido) {
              d3.json("./data/importacoes/gas/gas_importacoes.json", function (data_gas) {
                d3.json("./data/importacoes/petroleo/petroleo_importacoes.json", function (data_petroleo) {
                  d3.json("./data/importacoes/eletrica/eletrica_importacoes.json", function (data_eletrica) {
                    d3.json("./data/importacoes/renovaveis/renovaveis_importacoes.json", function (data_renovaveis) {

                      data_comb_solido = data_comb_solido[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_gas = data_gas[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_petroleo = data_petroleo[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_eletrica = data_eletrica[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_renovaveis = data_renovaveis[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });


                      var data = {
                        "Combustivel Sólido": data_comb_solido[0].Energy,
                        "Gás": data_gas[0].Energy,
                        "Petróleo": data_petroleo[0].Energy,
                        "Elétrica": data_eletrica[0].Energy,
                        "Renováveis": data_renovaveis[0].Energy
                      };

                      // set the color scale
                      var color = d3.scaleOrdinal()
                        .domain(data)
                        .range(d3.schemeSet2);

                      // Compute the position of each group on the pie:
                      var pie = d3.pie()
                        .value(function (d) { return d.value; })
                      var data_ready = pie(d3.entries(data))
                      // Now I know that group A goes from 0 degrees to x degrees and so on.

                      // shape helper to build arcs:
                      var arcGenerator = d3.arc()
                        .innerRadius(0)
                        .outerRadius(radius)

                      // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.
                      svg_pc_1
                        .selectAll('mySlices')
                        .data(data_ready)
                        .enter()
                        .append('path')
                        .attr('d', arcGenerator)
                        .attr('fill', function (d) { return (color(d.data.key)) })
                        .attr("stroke", "black")
                        .style("stroke-width", "2px")
                        .style("opacity", 0.7)

                      // Now add the annotation. Use the centroid method to get the best coordinates
                      svg_pc_1
                        .selectAll('mySlices')
                        .data(data_ready)
                        .enter()
                        .append('text')
                        .attr("transform", function (d) { return "translate(" + arcGenerator.centroid(d) + ")"; })
                        .style("text-anchor", "middle")
                        .style("font-size", 17)

                      var legend = svg_pc_1.selectAll(".legend")
                        .data(color.domain())
                        .enter().append("g")
                        .attr("class", "legend")
                        .attr("transform", function (d, i) { return "translate(50," + i * 20 + ")"; });

                      // draw legend colored rectangles
                      legend.append("rect")
                        .attr("x", width - 18)
                        .attr("width", 18)
                        .attr("height", 18)
                        .style("fill", color);

                      // draw legend text
                      legend.append("text")
                        .attr("x", width - 24)
                        .attr("y", 9)
                        .attr("dy", ".35em")
                        .style("text-anchor", "end")
                        .text(function (d) { return d; })
                        .style("font-size", 20)
                        .style("font-weight", "bold")
                        .style("fill", "black");



                      // Add one dot in the legend for each name.
                    })
                  })
                })
              })
            })

            function changeChart1() {
              var x = document.getElementById("pie_chart_1");
              var y = document.getElementById("radar_chart_1");
              console.log(y)
              if (x.style.display === "none") {
                if(y != null)
                y.style.display = "none";
                // document.getElementById("radar_chart_1").style.display = "none";
                
                document.getElementById("legend1").innerHTML = "tep (tonelada equivalente de petróleo) - Milhares";
                x.style.display = "block";
                // document.getElementById("pie_chart_1").style.display = "block";
                
                




                  } else {
                  x.style.display = "none";
                  // document.getElementById("pie_chart_1").style.display = "none";

                  document.getElementById("legend1").innerHTML = "Percentagem (%)";

                  
                  if(y != null)
                      y.style.display = "block";
                      // document.getElementById("radar_chart_1").style.display = "block";
              }
            }

            function createChart1(){
              year = localStorage.getItem("year");

                      var width = 300,
                          height = 300;

                      // Config for the Radar chart
                      var config = {
                          w: width,
                          h: height,
                          maxValue: 100,
                          levels: 5,
                          ExtraWidthX: 300
                      }
    
                      d3.json("./data/importacoes/comb_solido/comb_solidos_importacoes.json", function (data_comb_solido) {
                                  d3.json("./data/importacoes/gas/gas_importacoes.json", function (data_gas) {
                                    d3.json("./data/importacoes/petroleo/petroleo_importacoes.json", function (data_petroleo) {
                                      d3.json("./data/importacoes/eletrica/eletrica_importacoes.json", function (data_eletrica) {
                                        d3.json("./data/importacoes/renovaveis/renovaveis_importacoes.json", function (data_renovaveis) {
    
                                          data_comb_solido = data_comb_solido[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                                          data_gas = data_gas[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                                          data_petroleo = data_petroleo[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                                          data_eletrica = data_eletrica[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                                          data_renovaveis = data_renovaveis[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
    
                                          var renovaveis_total = data_comb_solido[0].Energy + data_gas[0].Energy + data_petroleo[0].Energy + data_eletrica[0].Energy + data_renovaveis[0].Energy;
                                          console.log(data_renovaveis[0].Energy);
                                          console.log(renovaveis_total);
                                              var data = [
                                                [
                                                      {"area": "Combustíveis Sólidos", "value": Math.round((data_comb_solido[0].Energy  * 100 ) / renovaveis_total)},
                                                      {"area": "Gás", "value": Math.round((data_gas[0].Energy * 100 )/ renovaveis_total)},
                                                      {"area": "Petróleo", "value": Math.round((data_petroleo[0].Energy * 100)/ renovaveis_total)},
                                                      {"area": "Elétrica", "value": Math.round((data_eletrica[0].Energy * 100)/ renovaveis_total)},
                                                      {"area": "Renováveis", "value": Math.round((data_renovaveis[0].Energy * 100) / renovaveis_total)}
                                                  ]
                                            ];
    
                                            RadarChart.draw("#radar_chart_1", data, config);
    
                                        })
                                    })
                                })
                            })
                        }); 
                        
                        var svg = d3.select('#radar_chart_1')
                            .selectAll('svg')
                            .append('svg')
                            .attr("width", width)
                            .attr("height", height);
            }

          </script>
        </div>

        <div class='flex m-3 flex-wrap justify-center gap-1 items-center w-1/2'>
          <div class="bg-white w-full p-4 pt-5 rounded-2xl shadow-md">
            <p class="text-l font-semibold text-gray-700 text-center">Exportações de Energia</p>
            <p class="text-xs font-semibold text-gray-700 text-center" id="legend2"></p>
            <input type="checkbox" id="toggle2" class="toggleCheckbox" onclick='changeChart2()'/>
            <label for="toggle2" class='toggleContainer'>
                <div>Circular</div>
                <div>Radar</div>
            </label>
            <div id="pie_chart_2"></div>
            <div id="radar_chart_2" style="display: none;"></div>
          </div>
          <script>
            document.getElementById("legend2").innerText = "tep (tonelada equivalente de petróleo) - Milhares"
            createChart2()

            // set the dimensions and margins of the graph
            var width = 300
            height = 300
            margin = 40

            // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.
            var radius = Math.min(width, height) / 2 - margin

            // append the svg object to the div called 'my_dataviz'
            var svg_pc_2 = d3.select("#pie_chart_2")
              .append("svg")
              .attr("width", 600)
              .attr("height", height)
              .append("g")
              .attr("transform", "translate(" + 200 + "," + height / 2 + ")");

            var year = localStorage.getItem("year");

            d3.json("./data/exportacoes/comb_solidos/comb_solidos_exportacoes.json", function (data_comb_solido) {
              d3.json("./data/exportacoes/gas/gas_exportacoes.json", function (data_gas) {
                d3.json("./data/exportacoes/petroleo/petroleo_exportacoes.json", function (data_petroleo) {
                  d3.json("./data/exportacoes/eletrica/eletrica_exportacoes.json", function (data_eletrica) {
                    d3.json("./data/exportacoes/renovaveis/renovaveis_exportacoes.json", function (data_renovaveis) {

                      data_comb_solido = data_comb_solido[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_gas = data_gas[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_petroleo = data_petroleo[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_eletrica = data_eletrica[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                      data_renovaveis = data_renovaveis[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });


                      var data = {
                        "Combustível Sólido": data_comb_solido[0].Energy,
                        "Gás": data_gas[0].Energy,
                        "Petróleo": data_petroleo[0].Energy,
                        "Elétrica": data_eletrica[0].Energy,
                        "Renováveis": data_renovaveis[0].Energy
                      };

                      // set the color scale
                      var color = d3.scaleOrdinal()
                        .domain(data)
                        .range(d3.schemeSet2);

                      // Compute the position of each group on the pie:
                      var pie = d3.pie()
                        .value(function (d) { return d.value; })
                      var data_ready = pie(d3.entries(data))
                      // Now I know that group A goes from 0 degrees to x degrees and so on.

                      // shape helper to build arcs:
                      var arcGenerator = d3.arc()
                        .innerRadius(0)
                        .outerRadius(radius)

                      // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.
                      svg_pc_2
                        .selectAll('mySlices')
                        .data(data_ready)
                        .enter()
                        .append('path')
                        .attr('d', arcGenerator)
                        .attr('fill', function (d) { return (color(d.data.key)) })
                        .attr("stroke", "black")
                        .style("stroke-width", "2px")
                        .style("opacity", 0.7)

                      // Now add the annotation. Use the centroid method to get the best coordinates
                      svg_pc_2
                        .selectAll('mySlices')
                        .data(data_ready)
                        .enter()
                        .append('text')
                        .attr("transform", function (d) { return "translate(" + arcGenerator.centroid(d) + ")"; })
                        .style("text-anchor", "middle")
                        .style("font-size", 17)

                      var legend_2 = svg_pc_2.selectAll(".legend")
                        .data(color.domain())
                        .enter().append("g")
                        .attr("class", "legend")
                        .attr("transform", function (d, i) { return "translate(250," + i * 20 + ")"; });

                      // draw legend colored rectangles
                      legend_2.append("rect")
                        .attr("x", 100 - 18)
                        .attr("width", 18)
                        .attr("height", 18)
                        .style("fill", color);

                      // draw legend text
                      legend_2.append("text")
                        .attr("x", 100 - 24)
                        .attr("y", 9)
                        .attr("dy", ".35em")
                        .style("text-anchor", "end")
                        .text(function (d) { return d; })
                        .style("font-size", 20)
                        .style("font-weight", "bold")
                        .style("fill", "black");
                    })
                  })
                })
              })
            })

            function changeChart2() {
              var x = document.getElementById("pie_chart_2");
              var y = document.getElementById("radar_chart_2");
              if (x.style.display === "none") {
                  if(y != null)
                      y.style.display = "none";
                      document.getElementById("radar_chart_2").style.display = "none";
                    
                      year = localStorage.getItem("year");

                      document.getElementById("legend2").innerText = "tep (tonelada equivalente de petróleo) - Milhares"


                  x.style.display = "block";
                  document.getElementById("pie_chart_2").style.display = "block";


                  } else {
                  x.style.display = "none";
                  document.getElementById("pie_chart_2").style.display = "none";
                  document.getElementById("legend2").innerText = "Percentagem (%)"

                  
                  if(y != null)
                      y.style.display = "block";
                      document.getElementById("radar_chart_2").style.display = "block";
              }
            }
            function createChart2(){
              var width = 300,
                          height = 300;

                      // Config for the Radar chart
                      var config = {
                          w: width,
                          h: height,
                          maxValue: 100,
                          levels: 5,
                          ExtraWidthX: 300
                      }
    
                      d3.json("./data/exportacoes/comb_solidos/comb_solidos_exportacoes.json", function (data_comb_solido) {
                                  d3.json("./data/exportacoes/gas/gas_exportacoes.json", function (data_gas) {
                                    d3.json("./data/exportacoes/petroleo/petroleo_exportacoes.json", function (data_petroleo) {
                                      d3.json("./data/exportacoes/eletrica/eletrica_exportacoes.json", function (data_eletrica) {
                                        d3.json("./data/exportacoes/renovaveis/renovaveis_exportacoes.json", function (data_renovaveis) {
    
                                          data_comb_solido = data_comb_solido[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                                          data_gas = data_gas[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                                          data_petroleo = data_petroleo[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                                          data_eletrica = data_eletrica[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
                                          data_renovaveis = data_renovaveis[year].filter(function (d) { return d.Country == localStorage.getItem("country"); });
    
                                          var exportacoes_total = data_comb_solido[0].Energy + data_gas[0].Energy + data_petroleo[0].Energy + data_eletrica[0].Energy + data_renovaveis[0].Energy;
    
                                              var data = [
                                                [
                                                      {"area": "Combustíveis Sólidos", "value": Math.round((data_comb_solido[0].Energy * 100) /exportacoes_total)},
                                                      {"area": "Gás", "value": Math.round((data_gas[0].Energy * 100) /exportacoes_total)},
                                                      {"area": "Petróleo", "value": Math.round((data_petroleo[0].Energy * 100) /exportacoes_total)},
                                                      {"area": "Elétrica", "value": Math.round((data_eletrica[0].Energy * 100) /exportacoes_total)},
                                                      {"area": "Renováveis", "value": Math.round((data_renovaveis[0].Energy * 100) /exportacoes_total)}
                                                  ]
                                            ];
    
                                            RadarChart.draw("#radar_chart_2", data, config);
    
                                        })
                                    })
                                })
                            })
                        }); 
                        
                        var svg = d3.select('#radar_chart_2')
                            .selectAll('svg')
                            .append('svg')
                            .attr("width", width)
                            .attr("height", height);
            }

            
                
                  
              </script>      
        </div>
      </div>
    </div>
  </div>
  </div>
</body>
</html>
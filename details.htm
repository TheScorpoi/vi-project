<!DOCTYPE html>


<html>
<head>
<meta charset="utf-8">
<title>Details</title>
<script src="https://cdn.tailwindcss.com"></script>
<script src="//d3js.org/d3.v4.min.js" charset="utf-8"></script>
<script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>
<script src="details.js"></script>
<link rel="stylesheet"
          href=
"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <style>
      h1 {
          color: black;
      }
      .btn {
          background-color: light-green;
          padding: 0px 16px;
          font-size: 10px;
          border-radius: 100px;
          
      }
      .btn:hover {
          background-color: DarkCyan;
          color:white;
      }
      div.tooltip-donut {
          position: absolute;
          text-align: center;
          padding: .5rem;
          background: #FFFFFF;
          color: #313639;
          border: 1px solid #313639;
          border-radius: 8px;
          pointer-events: none;
          font-size: 1.3rem;
          font-weight: 500;
      }
    </style>
</head>

<body class="h-screen bg-gray-100" >
  <div class="flex flex-row">

    
      <div class="bg-white h- w-48 pl-2 pt-5 shadow-md" >
        <div class="flex flex-wrap">
          <p  class="bg-white text-l font-extrabold tracking-tight text-slate-900">Countries</p> 
          <button class="btn ml-7">
            <em class="fa fa-times"></em>
          </button>
        </div>
        <div >
            <div class="mt-6">
              <p class="text-s text-gray-700 ">A</p>
              <p class="text-xs text-black ">Andorra</p>
              
            </div>

        </div>  
      </div>


    <div class='mt-12 w-full mx-10'>
      <div onload="getCurrentURL()">
        <h1 class="text-3xl font-bold ml-3" id="title">Alemanha</h1>
      </div>

      <div class='flex flex-row lg:flex-nowrap justify-center'>

          <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
            <div class="bg-white h-32 w-72 p-4 pt-5 rounded-2xl shadow-md" >
              <p class="text-s text-gray-700 ">Consumo nas Famílias</p>
              <p class="text-xs text-gray-700 mt-1 ">(Per Capita)</p>
                <div class="flex flex-wrap">
                  <span class='text-2xl font-semibold mt-2'>647,0</span>  <!-- place data here -->
                  <span class='text-s text-gray-500 mt-2 ml-1'>tep</span>
                </div>
            </div>
          </div>

          <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
            <div class="bg-white h-32  w-72 p-4 pt-5 rounded-2xl shadow-md" >
              <p class="text-s text-gray-700 ">Contribuição Energias Renováveis Consumo </p>
                <div class="flex flex-wrap">
                  <span class='text-2xl font-semibold mt-2'>647,0</span>   <!-- place data here -->
                  <span class='text-s text-gray-500 mt-2 ml-1'>tep</span>
                </div>
            </div>
          </div>


          <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
            <div class="bg-white h-32  w-72 p-4 pt-5 rounded-2xl shadow-md" >
              <p class="text-s text-gray-700 ">Contribuição Energias Renováveis Produção</p>
                <div class="flex flex-wrap">
                  <span class='text-2xl font-semibold mt-2'>647,0</span>  <!-- place data here -->
                  <span class='text-s text-gray-500 mt-2 ml-1'>tep</span>
                </div>
            </div>
          </div>

          <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
            <div class="bg-white h-32  w-72 p-4 pt-5 rounded-2xl shadow-md" >
              <p class="text-s text-gray-700 ">Preço - Doméstico</p>
                <div class="flex flex-wrap pt-6">
                  <span class='text-2xl font-semibold mt-2'>647,0</span>  <!-- place data here -->
                  <span class='text-s text-gray-500 mt-2 ml-1'>tep</span>
                </div>
            </div>
          </div>

          <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
            <div class="bg-white h-32  w-72 p-4 pt-5 rounded-2xl shadow-md" >
              <p class="text-s text-gray-700 ">Preço Eletricidade - Industrial</p>
                <div class="flex flex-wrap pt-6">
                  <span class='text-2xl font-semibold mt-2'>647,0</span>  <!-- place data here -->
                  <span class='text-s text-gray-500 mt-2 ml-1'>tep</span>
                </div>
            </div>
          </div>

        </div>

        <div class="flex flex-row">
        <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
          <div class="bg-white  p-4 pt-5 rounded-2xl shadow-md text-center">
            <p class="text-l font-semibold text-gray-700 text-center">Energia Consumida por Setor</p>
            <div id="bar_plot"></div>
          </div>
          <script>
            // set the dimensions and margins of the graph
            var margin = {top: 30, right: 30, bottom: 70, left: 60},
                width = 730 - margin.left - margin.right,
                height = 400 - margin.top - margin.bottom;
            
            // append the svg object to the body of the page
            var svg = d3.select("#bar_plot")
              .append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
              .append("g")
                .attr("transform",
                      "translate(" + margin.left + "," + margin.top + ")");

            var year = 2000;

            // Parse the Data
            d3.json("./data/consumo_setor/agricultura/agricultura_consumo_setor.json", function(data_agricultura) {
              d3.json("./data/consumo_setor/industria/industria_consumo_setor.json", function(data_industria) {
                d3.json("./data/consumo_setor/servicos/servicos_consumo_setor.json", function(data_servicos) {
                  d3.json("./data/consumo_setor/transportes/transportes_consumo_setor.json", function(data_transporte) {
                    d3.json("./data/consumo_setor/casa/casa_consumo_setor.json", function(data_casa) {
                      d3.json("./data/consumo_setor/pesca/pesca_consumo_setor.json", function(data_pesca) {
                      data_agricultura = data_agricultura[year].filter(function(d) { return d.Country == "Alemanha"; });
                      data_industria = data_industria[year].filter(function(d) { return d.Country == "Alemanha"; });
                      data_servicos = data_servicos[year].filter(function(d) { return d.Country == "Alemanha"; });
                      data_transporte = data_transporte[year].filter(function(d) { return d.Country == "Alemanha"; });
                      data_casa = data_casa[year].filter(function(d) { return d.Country == "Alemanha"; });
                      data_pesca = data_pesca[year].filter(function(d) { return d.Country == "Alemanha"; });


                      var data = [
                        {name: "Agricultura", value: data_agricultura[0].Energy},
                        {name: "Industria", value: data_industria[0].Energy},
                        {name: "Serviços", value: data_servicos[0].Energy},
                        {name: "Transporte", value: data_transporte[0].Energy},
                        {name: "Doméstico", value: data_casa[0].Energy},
                        {name: "Pesca", value: data_pesca[0].Energy},
                      ];

                      // X axis
                      var x = d3.scaleBand()
                        .range([ 0, 700 ])
                        .domain(data.map(function(d) { return d.name; }))
                        .padding(0.2);

                      svg.append("g")
                        .attr("transform", "translate(0," + height + ")")
                        .call(d3.axisBottom(x))
                        .selectAll("text")
                          .attr("transform", "translate(-10,0)rotate(-45)")
                          .style("text-anchor", "end");
                    
                      // Add Y axis
                      var y = d3.scaleLinear()
                        .domain([0, d3.max(data, function(d) { return d.value + 1000; })])
                        .range([ height, 0]);
                      svg.append("g")
                        .call(d3.axisLeft(y));

                      // value of bar
                      var div = d3.select("body").append("div")
                                .attr("class", "tooltip-donut")
                                .style("opacity", 0);
                    
                      // Bars
                      svg.selectAll("mybar")
                        .data(data)
                        .enter()
                        .append("rect")
                          .attr("x", function(d) { return x(d.name); })
                          .attr("y", function(d) { return y(d.value); })
                          .attr("width", x.bandwidth())
                          .attr("height", function(d) { return height - y(d.value); })
                          .attr("fill", "#69b3a2")
                          .on('mouseover', function (d, i) {
                            d3.select(this).transition()
                                .duration('100')
                                .attr('opacity', '.70');          //Makes the new div appear on hover:
                            div.transition()
                                .duration(100)
                                .style("opacity", 1);
                            let num = Math.round(d.value);
                            div.html(num)
                                .style("left", (d3.event.pageX ) + "px")
                                .style("top", (d3.event.pageY ) + "px");
                      })
                      .on('mouseout', function (d, i) {
                            d3.select(this).transition()
                                .duration('100')
                                .attr('opacity', '1');          //Makes the new div disappear:
                            div.transition()
                                .duration('100')
                                .style("opacity", 0);
                      })    


                        
                    })
                  })
                })
                })
                })
              });            
            </script>
           </div>
          <div class="w-full">
            <div class='flex m-3 flex-wrap justify-center gap-1 items-center'>
              <div class="bg-white w-full p-4 pt-5 rounded-2xl shadow-md" >
                <p class="text-l font-semibold text-gray-700 text-center">Produção de Energia</p>
                <div id="bar_plot2"></div>
              </div>
              <script>
                // set the dimensions and margins of the graph
                var margin = {top: 30, right: 30, bottom: 70, left: 60},
                    width = 730 - margin.left - margin.right,
                    height = 400 - margin.top - margin.bottom;
                
                // append the svg object to the body of the page
                var svg_2 = d3.select("#bar_plot2")
                  .append("svg")
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom)
                  .append("g")
                    .attr("transform",
                          "translate(" + margin.left + "," + margin.top + ")");
    
                var year = 2000;
    
                // Parse the Data
                d3.json("./data/prod/gas/gas_prod.json", function(data_gas) {
                  d3.json("./data/prod/nuclear/nuclear_prod.json", function(data_nuclear) {
                    d3.json("./data/prod/petroleo/petroleo_prod.json", function(data_petroleo) {
                      d3.json("./data/prod/renovaveis/renovaveis_prod.json", function(data_renovaveis) {
                          data_gas = data_gas[year].filter(function(d) { return d.Country == "Alemanha"; });
                          data_nuclear = data_nuclear[year].filter(function(d) { return d.Country == "Alemanha"; });
                          data_petroleo = data_petroleo[year].filter(function(d) { return d.Country == "Alemanha"; });
                          data_renovaveis = data_renovaveis[year].filter(function(d) { return d.Country == "Alemanha"; });
    
    
                          var data = [
                            {name: "Gás", value: data_gas[0].Energy},
                            {name: "Nuclear", value: data_nuclear[0].Energy},
                            {name: "Petróleo", value: data_petroleo[0].Energy},
                            {name: "Renováveis", value: data_renovaveis[0].Energy},
                          ];
    
                          // X axis
                          var x = d3.scaleBand()
                            .range([ 0, 700 ])
                            .domain(data.map(function(d) { return d.name; }))
                            .padding(0.2);
    
                          svg_2.append("g")
                            .attr("transform", "translate(0," + height + ")")
                            .call(d3.axisBottom(x))
                            .selectAll("text")
                              .attr("transform", "translate(-10,0)rotate(-45)")
                              .style("text-anchor", "end");
                        
                          // Add Y axis
                          var y = d3.scaleLinear()
                            .domain([0, d3.max(data, function(d) { return d.value + 1000; })])
                            .range([ height, 0]);
                          svg_2.append("g")
                            .call(d3.axisLeft(y));
    
                          // value of bar
                          var div = d3.select("body").append("div")
                                    .attr("class", "tooltip-donut")
                                    .style("opacity", 0);
                        
                          // Bars
                          svg_2.selectAll("mybar")
                            .data(data)
                            .enter()
                            .append("rect")
                              .attr("x", function(d) { return x(d.name); })
                              .attr("y", function(d) { return y(d.value); })
                              .attr("width", x.bandwidth())
                              .attr("height", function(d) { return height - y(d.value); })
                              .attr("fill", "#9395d3")
                              .on('mouseover', function (d, i) {
                                d3.select(this).transition()
                                    .duration('100')
                                    .attr('opacity', '.70');          //Makes the new div appear on hover:
                                div.transition()
                                    .duration(100)
                                    .style("opacity", 1);
                                let num = Math.round(d.value);
                                div.html(num)
                                    .style("left", (d3.event.pageX ) + "px")
                                    .style("top", (d3.event.pageY ) + "px");
                          })
                          .on('mouseout', function (d, i) {
                                d3.select(this).transition()
                                    .duration('100')
                                    .attr('opacity', '1');          //Makes the new div disappear:
                                div.transition()
                                    .duration('100')
                                    .style("opacity", 0);
                          })    
                        })
                      })
                    })
                  });            
                </script>
            </div>
          </div>          
        </div>
        
        <div class="flex flex-row">
          <div class='flex m-3 flex-wrap justify-center gap-1 items-center w-1/2'>
            <div class="bg-white w-full  p-4 pt-5 rounded-2xl shadow-md" >
              <p class="text-l font-semibold text-gray-700 text-center">Importações de energia </p>
              <div id="pie_chart_1"></div>
            </div>
            <script>

              // set the dimensions and margins of the graph
              var width = 300
                  height = 300
                  margin = 40
              
              // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.
              var radius = Math.min(width, height) / 2 - margin
              
              // append the svg object to the div called 'my_dataviz'
              var svg_pc_1 = d3.select("#pie_chart_1")
                .append("svg")
                  .attr("width", width)
                  .attr("height", height)
                .append("g")
                  .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");
              
              var year = 2020;

              d3.json("./data/importacoes/comb_solido/impor_comb_solidos.json", function(data_comb_solido) {
                d3.json("./data/importacoes/gas/impor_gas.json", function(data_gas) {
                  d3.json("./data/importacoes/petroleo/impor_petroleo.json", function(data_petroleo) {
                    d3.json("./data/importacoes/eletrica/impor_eletrica.json", function(data_eletrica) {
                      d3.json("./data/importacoes/renovaveis/impor_renovaveis.json", function(data_renovaveis) {

                  data_comb_solido = data_comb_solido[year].filter(function(d) { return d.Country == "Alemanha"; });
                  data_gas = data_gas[year].filter(function(d) { return d.Country == "Alemanha"; });
                  data_petroleo = data_petroleo[year].filter(function(d) { return d.Country == "Alemanha"; });
                  data_eletrica = data_eletrica[year].filter(function(d) { return d.Country == "Alemanha"; });
                  data_renovaveis = data_renovaveis[year].filter(function(d) { return d.Country == "Alemanha"; });


                  var data = {"Combostivel Sólido": data_comb_solido[0].Energy, 
                                "Gás": data_gas[0].Energy, 
                                "Petróleo": data_petroleo[0].Energy, 
                                "Elétrica": data_eletrica[0].Energy, 
                                "Renováveis": data_renovaveis[0].Energy};
              
              // set the color scale
              var color = d3.scaleOrdinal()
                .domain(data)
                .range(d3.schemeSet2);
              
              // Compute the position of each group on the pie:
              var pie = d3.pie()
                .value(function(d) {return d.value; })
              var data_ready = pie(d3.entries(data))
              // Now I know that group A goes from 0 degrees to x degrees and so on.
              
              // shape helper to build arcs:
              var arcGenerator = d3.arc()
                .innerRadius(0)
                .outerRadius(radius)
              
              // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.
              svg_pc_1
                .selectAll('mySlices')
                .data(data_ready)
                .enter()
                .append('path')
                  .attr('d', arcGenerator)
                  .attr('fill', function(d){ return(color(d.data.key)) })
                  .attr("stroke", "black")
                  .style("stroke-width", "2px")
                  .style("opacity", 0.7)
              
              // Now add the annotation. Use the centroid method to get the best coordinates
              svg_pc_1
                .selectAll('mySlices')
                .data(data_ready)
                .enter()
                .append('text')
                .text(function(d){ return d.data.key})
                .attr("transform", function(d) { return "translate(" + arcGenerator.centroid(d) + ")";  })
                .style("text-anchor", "middle")
                .style("font-size", 17)
              
              // Add one dot in the legend for each name.
              })
              })
              })
              })
              })
              
              </script>
          </div>

          <div class='flex m-3 flex-wrap justify-center gap-1 items-center w-1/2'>
            <div class="bg-white w-full p-4 pt-5 rounded-2xl shadow-md" >
              <p class="text-l font-semibold text-gray-700 text-center">Exports by energy product</p>
              <div id="pie_chart_2"></div>
            </div>
            <script>

              // set the dimensions and margins of the graph
              var width = 300
                  height = 300
                  margin = 40
              
              // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.
              var radius = Math.min(width, height) / 2 - margin
              
              // append the svg object to the div called 'my_dataviz'
              var svg_pc_2 = d3.select("#pie_chart_2")
                .append("svg")
                  .attr("width", width)
                  .attr("height", height)
                .append("g")
                  .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");
              
              // Create dummy data
              var data = {a: 9, b: 20, c:30, d:8, e:12}
              
              // set the color scale
              var color = d3.scaleOrdinal()
                .domain(data)
                .range(d3.schemeSet2);
              
              // Compute the position of each group on the pie:
              var pie = d3.pie()
                .value(function(d) {return d.value; })
              var data_ready = pie(d3.entries(data))
              // Now I know that group A goes from 0 degrees to x degrees and so on.
              
              // shape helper to build arcs:
              var arcGenerator = d3.arc()
                .innerRadius(0)
                .outerRadius(radius)
              
              // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.
              svg_pc_2
                .selectAll('mySlices')
                .data(data_ready)
                .enter()
                .append('path')
                  .attr('d', arcGenerator)
                  .attr('fill', function(d){ return(color(d.data.key)) })
                  .attr("stroke", "black")
                  .style("stroke-width", "2px")
                  .style("opacity", 0.7)
                  .text(function(d){ return d.data.value})
              
              // Now add the annotation. Use the centroid method to get the best coordinates
              svg_pc_2
                .selectAll('mySlices')
                .data(data_ready)
                .enter()
                .append('text')
                //.text(function(d){ return "grp " + d.data.key})
                .attr("transform", function(d) { return "translate(" + arcGenerator.centroid(d) + ")";  })
                .style("text-anchor", "middle")
                .style("font-size", 17)


              
              
              </script>
          </div>


        </div>
      
      </div>
    
    </div>
  
  </div>

</body>

</html>